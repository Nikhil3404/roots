**
 * <p> Title: calculator. </p>
 
 * <p> Copyright: Nikhil Â© 2018 </p>
 
 * @author Nikhil
 * @version 4.00	2018-03-09 calculator is made to do root function for both measured and error terms
 */
package roots;
import java.math.BigDecimal;
import java.math.MathContext;
import java.math.RoundingMode;
import java.util.Scanner;

public class classactivity {
	public static void main(String[] args)
	{
		double  x,y,z,k,l,m,e,f,s,a,b,j,v,d;
		 Scanner nikhil = new Scanner(System.in);
		 //roots
		 System.out.println("Enter measured value: "); // here you can enter any value which you kept as measured term
		    x = nikhil.nextDouble();               // double helps to compute both integer and decimal values
		    System.out.println("Enter error value: "); // here you can enter any value which you kept as error term
		    y= nikhil.nextDouble();               // double helps to compute both integer and decimal values   
		
		  //code for square
            z = Math.pow(x, 2);
            k =y/Math.abs(x);
            l = (2)*k*Math.abs(z);
            System.out.println("Square of the error term : "+z+" +" + getSignificant(l,1));


            //code for square root
             m =  Math.sqrt(x);
            e = (0.5)*k*Math.abs(m);
            System.out.println("The Square root of the error term : "+ m+"  ±  "+ getSignificant(e,1));
           
            // code for cube root
            f= Math.cbrt(x);
            s=Math.abs(0.33333333333333333333333333333333)*k*Math.abs(f);
             System.out.println("The cube root of the error term : "+ f+"  ±  "+ getSignificant(s,1));

		       nikhil.close();
		
		}
		    
		 // significance method
			private static String getSignificant(double value, int sigFigs) {
				 MathContext mc = new MathContext(sigFigs, RoundingMode.DOWN);
		         BigDecimal bigDecimal = new BigDecimal(value, mc);
		         return bigDecimal.toPlainString();
			}	
			    
	}
	
	
